plot(q1$geometry)
q2 = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q2 = q2[8][[1]]
names(q2)
plot(q2$geometry, add = TRUE)
q = st_union(st_union(q1, q2, by_feature = TRUE))
plot(q)
bbox_poly = st_as_sfc(bbox)
g = st_intersection(q, bbox_poly)
plot(g)
g = st_transform(g, 27700)
bbox_poly = st_as_sfc(st_bbox(st_transform(bbox_poly, 27700)))
g = st_as_sf(st_cast(st_cast(g, "POLYGON"), "LINESTRING"))
lengths(g$x)
g = g[33,]
plot(g$x)
lengths(g$x)
g = st_sf(st_line_sample(g, n = 500))
lengths(g$st_line_sample.g..n...500.)
g = st_sf(st_cast(g, "POLYGON"))
plot(g, col = "red")
rm(q, q1, q2)
st_write(g, "working/thames.gpkg", delete_layer = TRUE)
st_write(bbox_poly, "working/bbox_poly.gpkg", delete_layer = TRUE)
rm(list = ls())
g = st_read("working/thames.gpkg")
bbox_poly = st_read("working/bbox_poly.gpkg")
bbox_poly_minus50 = st_buffer(bbox_poly, dist = set_units(-300, "m"))
plot(bbox_poly_minus50, add = TRUE)
bbox_line_minus50 = st_cast(bbox_poly_minus50, "LINESTRING")
bbox = st_bbox(bbox_poly, crs = 27700)
#______________________________________________________________________________#
m = midlines_draw(g, border_line = bbox_line_minus50)
plot(g$geom)
plot(m$geometry, col = m$line_id, add = TRUE)
plot(bbox_poly_minus50$geom, add = TRUE)
View(g)
m2 = midlines_clean(m, n_removed = 10, border_line = bbox_line)
m2 = midlines_clean(m, n_removed = 10, border_line = bbox_line_minus50)
plot(g$geom)
plot(m2$geometry, col = m2$removed_flag, add = TRUE)
plot(m2$geometry)
plot(m2$geometry[m2$removed_flag==0])
m2 = midlines_clean(m, n_removed = 5, border_line = bbox_line_minus50)
plot(g$geom)
plot(m2$geometry, col = m2$removed_flag, add = TRUE)
plot(m2$geometry[m2$removed_flag==0])
m2 = midlines_clean(m, n_removed = 3, border_line = bbox_line_minus50)
plot(g$geom)
plot(m2$geometry, col = m2$removed_flag, add = TRUE)
table(m2$removed_flag)
plot(m2$geometry[m2$removed_flag==0])
?midlines_clean
m2 = midlines_clean(m, n_removed = 1, border_line = bbox_line_minus50)
plot(g$geom)
plot(m2$geometry, col = m2$removed_flag, add = TRUE)
table(m2$removed_flag)
plot(m2$geometry[m2$removed_flag==0])
m = midlines_draw(g, border_line = bbox_line_minus50)
plot(g$geom)
plot(m$geometry, col = m$line_id, add = TRUE)
plot(bbox_poly_minus50$geom, add = TRUE)
st_write(g, "working/thames.RData", delete_layer = TRUE)
as.data.frame(g)
df = as.data.frame(g)
df
class(df)
save(df, file = work/thames.RData)
save(df, file = working/thames.RData)
save(df, file = /working/thames.RData)
save(df, file = /working/thames.RData)
save(df, file = "working/thames.RData")
df2 = load(file = "working/thames.RData")
load("C:/Users/richa/OneDrive - University of Cambridge/midlines/working/thames.RData")
df
df2
load(file = "working/thames.RData")
df = as.data.frame(g)
save(df, file = "working/thames.RData")
rm(df)
load(file = "working/thames.RData")
st_as_sfc(df)
st_sfc(df)
st_as_sf(df)
usethis::use_data_raw()
usethis::use_data()
q1 = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q1 = q1[6][[1]]
names(q1)
plot(q1$geometry)
q2 = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
bbox = st_bbox(c(xmin = -0.0590, xmax = 0.0600, ymin = 51.4750, ymax = 51.5175), crs = 4326)
q1 = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q1 = q1[6][[1]]
names(q1)
plot(q1$geometry)
q2 = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q1 = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q2 = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q3 = q2[8][[1]]
View(q3)
q3
View(q1)
osm = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q1 = osm[6][[1]]
names(q1)
plot(q1$geometry)
#q2 = bbox %>%
#  opq() %>%
#  add_osm_feature("water") %>%
#  osmdata_sf()
q2 = osm[8][[1]]
names(q2)
q = st_union(st_union(q1, q2, by_feature = TRUE))
plot(q)
q1 = osm[6][[1]]
q2 = osm[8][[1]]
q = st_union(st_union(q1, q2, by_feature = TRUE))
#plot(q)
bbox_poly = st_as_sfc(bbox)
g = st_intersection(q, st_as_sfc(bbox))
plot(g)
g = st_transform(g, 27700)
#bbox_poly = st_as_sfc(st_bbox(st_transform(bbox_poly, 27700)))
g = st_as_sf(st_cast(st_cast(g, "POLYGON"), "LINESTRING"))
lengths(g$x)
max(lengths(g$x))
lengths(g$x) == max(lengths(g$x))
g = st_intersection(q, st_as_sfc(bbox))
plot(g)
g = st_transform(g, 27700)
#bbox_poly = st_as_sfc(st_bbox(st_transform(bbox_poly, 27700)))
g = st_as_sf(st_cast(st_cast(g, "POLYGON"), "LINESTRING"))
lengths(g$x)
g = g[lengths(g$x) == max(lengths(g$x)),]
plot(g$x)
g
View(g)
lengths(g$x)
g = st_sf(st_line_sample(g, n = 500))
lengths(g$st_line_sample.g..n...500.)
g = st_sf(st_cast(g, "POLYGON"))
plot(g, col = "red")
## code to prepare `thames` dataset goes here
library(osmdata)
library(dplyr)
library(sf)
library(units)
library(usethis)
bbox = st_bbox(c(xmin = -0.0590, xmax = 0.0600, ymin = 51.4750, ymax = 51.5175), crs = 4326)
osm = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q1 = osm[6][[1]]
q2 = osm[8][[1]]
q = st_union(st_union(q1, q2, by_feature = TRUE))
#plot(q)
#bbox_poly = st_as_sfc(bbox)
g = st_intersection(q, st_as_sfc(bbox))
plot(g)
g = st_transform(g, 27700)
#bbox_poly = st_as_sfc(st_bbox(st_transform(bbox_poly, 27700)))
g = st_as_sf(st_cast(st_cast(g, "POLYGON"), "LINESTRING"))
# keep the long one to removed extraneous bodies of water
g = g[lengths(g$x) == max(lengths(g$x)),]
plot(g$x)
lengths(g$x)
g = st_sf(st_line_sample(g, n = 500))
lengths(g$st_line_sample.g..n...500.)
g = st_sf(st_cast(g, "POLYGON"))
plot(g, col = "red")
usethis::use_data(thames, overwrite = TRUE)
## code to prepare `thames` dataset goes here
library(osmdata)
library(dplyr)
library(sf)
library(units)
library(usethis)
bbox = st_bbox(c(xmin = -0.0590, xmax = 0.0600, ymin = 51.4750, ymax = 51.5175), crs = 4326)
osm = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q1 = osm[6][[1]]
q2 = osm[8][[1]]
q = st_union(st_union(q1, q2, by_feature = TRUE))
#plot(q)
#bbox_poly = st_as_sfc(bbox)
g = st_intersection(q, st_as_sfc(bbox))
plot(g)
g = st_transform(g, 27700)
#bbox_poly = st_as_sfc(st_bbox(st_transform(bbox_poly, 27700)))
g = st_as_sf(st_cast(st_cast(g, "POLYGON"), "LINESTRING"))
# keep the long one to removed extraneous bodies of water
g = g[lengths(g$x) == max(lengths(g$x)),]
plot(g$x)
lengths(g$x)
g = st_sf(st_line_sample(g, n = 500))
lengths(g$st_line_sample.g..n...500.)
g = st_sf(st_cast(g, "POLYGON"))
plot(g, col = "red")
save(g, file = "data-raw/thames.RData")
usethis::use_data(thames, overwrite = TRUE)
## code to prepare `thames` dataset goes here
library(osmdata)
library(dplyr)
library(sf)
library(units)
library(usethis)
bbox = st_bbox(c(xmin = -0.0590, xmax = 0.0600, ymin = 51.4750, ymax = 51.5175), crs = 4326)
osm = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q1 = osm[6][[1]]
q2 = osm[8][[1]]
q = st_union(st_union(q1, q2, by_feature = TRUE))
#plot(q)
#bbox_poly = st_as_sfc(bbox)
g = st_intersection(q, st_as_sfc(bbox))
plot(g)
g = st_transform(g, 27700)
#bbox_poly = st_as_sfc(st_bbox(st_transform(bbox_poly, 27700)))
g = st_as_sf(st_cast(st_cast(g, "POLYGON"), "LINESTRING"))
# keep the long one to removed extraneous bodies of water
g = g[lengths(g$x) == max(lengths(g$x)),]
plot(g$x)
lengths(g$x)
g = st_sf(st_line_sample(g, n = 500))
lengths(g$st_line_sample.g..n...500.)
g = st_sf(st_cast(g, "POLYGON"))
thames = g
plot(thames, col = "red")
save(thames, file = "data-raw/thames.RData")
usethis::use_data(thames, overwrite = TRUE)
library(devtools)
load_all()
thames
bbox = st_bbox(c(xmin = -0.0590, xmax = 0.0600, ymin = 51.4750, ymax = 51.5175), crs = 4326)
bbox_poly = st_as_sfc(bbox)
library(dplyr)
library(sf)
library(units)
library(devtools)
load_all()
bbox = st_bbox(c(xmin = -0.0590, xmax = 0.0600, ymin = 51.4750, ymax = 51.5175), crs = 4326)
bbox_poly = st_as_sfc(bbox)
st_transform(bbox_poly, 27700)
st_bbox(st_transform(bbox_poly, 27700))
bbox = st_bbox(c(xmin = 534773.3, ymin = 176901.5, xmax = 543162.4, ymax = 181853.3))
bbox_poly = st_as_sfc(bbox)
thames_poly = thames
library(osmdata)
library(dplyr)
library(sf)
library(units)
library(usethis)
bbox = st_bbox(c(xmin = -0.0590, xmax = 0.0600, ymin = 51.4750, ymax = 51.5175), crs = 4326)
osm = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q1 = osm[6][[1]]
q2 = osm[8][[1]]
q = st_union(st_union(q1, q2, by_feature = TRUE))
#plot(q)
#bbox_poly = st_as_sfc(bbox)
g = st_intersection(q, st_as_sfc(bbox))
plot(g)
g = st_transform(g, 27700)
#bbox_poly = st_as_sfc(st_bbox(st_transform(bbox_poly, 27700)))
g = st_as_sf(st_cast(st_cast(g, "POLYGON"), "LINESTRING"))
# keep the long one to removed extraneous bodies of water
g = g[lengths(g$x) == max(lengths(g$x)),]
plot(g$x)
lengths(g$x)
g = st_sf(st_line_sample(g, n = 500))
colnames(g)[colnames(g) == "st_line_sample.g..n...500."] = "geometry"
st_geometry(g) <- "geometry"
g = st_sf(st_cast(g, "POLYGON"))
## code to prepare `thames` dataset goes here
library(osmdata)
library(dplyr)
library(sf)
library(units)
library(usethis)
bbox = st_bbox(c(xmin = -0.0590, xmax = 0.0600, ymin = 51.4750, ymax = 51.5175), crs = 4326)
osm = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q1 = osm[6][[1]]
q2 = osm[8][[1]]
q = st_union(st_union(q1, q2, by_feature = TRUE))
#plot(q)
#bbox_poly = st_as_sfc(bbox)
g = st_intersection(q, st_as_sfc(bbox))
plot(g)
g = st_transform(g, 27700)
#bbox_poly = st_as_sfc(st_bbox(st_transform(bbox_poly, 27700)))
g = st_as_sf(st_cast(st_cast(g, "POLYGON"), "LINESTRING"))
# keep the long one to removed extraneous bodies of water
g = g[lengths(g$x) == max(lengths(g$x)),]
plot(g$x)
lengths(g$x)
g = st_sf(st_line_sample(g, n = 500))
colnames(g)[colnames(g) == "st_line_sample.g..n...500."] = "geometry"
st_geometry(g) <- "geometry"
lengths(g$geometry)
g = st_sf(st_cast(g, "POLYGON"))
thames = g
plot(thames, col = "red")
save(thames, file = "data-raw/thames.RData")
usethis::use_data(thames, overwrite = TRUE)
thames_poly = thames
View(thames)
plot(thames_poly$geometry)
tm_shape(thames_poly)
tm_shape(thames_poly$geometry)
library(tmap)
tm_shape(thames_poly$geometry)
tm_shape(bbox_poly)
tm_shape(bbox_poly) + tm_polygons()
tm_shape(thames) + tm_polygons()
tm_shape(thames$geometry) + tm_polygons()
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_polygons()
bbox = st_bbox(c(xmin = 534773.3, ymin = 176901.5, xmax = 543162.4, ymax = 181853.3), crs = 27700)
bbox_poly = st_as_sfc(bbox)
p1 + tm_shape(bbox_poly) + tm_polygons()
p1 + tm_shape(bbox_poly) + tm_lines()
p1 + tm_shape(bbox_poly) + tm_borders()
library(osmdata)
library(dplyr)
library(sf)
library(units)
library(usethis)
bbox = st_bbox(c(xmin = -0.0590, xmax = 0.0600, ymin = 51.4750, ymax = 51.5175), crs = 4326)
osm = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q1 = osm[6][[1]]
q2 = osm[8][[1]]
q = st_union(st_union(q1, q2, by_feature = TRUE))
#plot(q)
#bbox_poly = st_as_sfc(bbox)
g = st_intersection(q, st_as_sfc(bbox))
plot(g)
g = st_transform(g, 27700)
#bbox_poly = st_as_sfc(st_bbox(st_transform(bbox_poly, 27700)))
g = st_as_sf(st_cast(st_cast(g, "POLYGON"), "LINESTRING"))
# keep the long one to removed extraneous bodies of water
g = g[lengths(g$x) == max(lengths(g$x)),]
plot(g$x)
lengths(g$x)
g = st_sf(st_line_sample(g, n = 500))
colnames(g)[colnames(g) == "st_line_sample.g..n...500."] = "geometry"
st_geometry(g) <- "geometry"
lengths(g$geometry)
g = st_sf(st_cast(g, "POLYGON"))
thames = g
plot(thames, col = "red")
g = st_transform(q, 27700)
bbox = st_bbox(c(xmin = 534773.3, ymin = 176901.5, xmax = 543162.4, ymax = 181853.3), crs = 27700)
g = st_intersection(g, st_as_sfc(bbox))
plot(g)
g = st_as_sf(st_cast(st_cast(g, "POLYGON"), "LINESTRING"))
# keep the long one to removed extraneous bodies of water
g = g[lengths(g$x) == max(lengths(g$x)),]
plot(g$x)
lengths(g$x)
g = st_sf(st_line_sample(g, n = 500))
colnames(g)[colnames(g) == "st_line_sample.g..n...500."] = "geometry"
st_geometry(g) <- "geometry"
lengths(g$geometry)
g = st_sf(st_cast(g, "POLYGON"))
thames = g
plot(thames, col = "red")
## code to prepare `thames` dataset goes here
library(osmdata)
library(dplyr)
library(sf)
library(units)
library(usethis)
bbox = st_bbox(c(xmin = -0.0590, xmax = 0.0600, ymin = 51.4750, ymax = 51.5175), crs = 4326)
osm = bbox %>%
opq() %>%
add_osm_feature("water") %>%
osmdata_sf()
q1 = osm[6][[1]]
q2 = osm[8][[1]]
q = st_union(st_union(q1, q2, by_feature = TRUE))
#plot(q)
#bbox_poly = st_as_sfc(bbox)
g = st_transform(q, 27700)
bbox = st_bbox(c(xmin = 534773.3, ymin = 176901.5, xmax = 543162.4, ymax = 181853.3), crs = 27700)
g = st_intersection(g, st_as_sfc(bbox))
plot(g)
#bbox_poly = st_as_sfc(st_bbox(st_transform(bbox_poly, 27700)))
g = st_as_sf(st_cast(st_cast(g, "POLYGON"), "LINESTRING"))
# keep the long one to removed extraneous bodies of water
g = g[lengths(g$x) == max(lengths(g$x)),]
plot(g$x)
lengths(g$x)
g = st_sf(st_line_sample(g, n = 500))
colnames(g)[colnames(g) == "st_line_sample.g..n...500."] = "geometry"
st_geometry(g) <- "geometry"
lengths(g$geometry)
g = st_sf(st_cast(g, "POLYGON"))
thames = g
plot(thames, col = "red")
save(thames, file = "data-raw/thames.RData")
usethis::use_data(thames, overwrite = TRUE)
bbox = st_bbox(c(xmin = 534773.3, ymin = 176901.5, xmax = 543162.4, ymax = 181853.3), crs = 27700)
bbox_poly = st_as_sfc(bbox)
thames_poly = thames
plot(thames_poly$geometry)
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_borders()
tmap_style("White")
tmap_style("white")
(p1 = tm_shape(thames) + tm_polygons())
tmap_options(frame = FALSE)
(p1 = tm_shape(thames) + tm_polygons())
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_borders()
bbox = st_bbox(c(xmin = 534773.3, ymin = 176580, xmax = 543162.4, ymax = 181853.3), crs = 27700)
bbox_poly = st_as_sfc(bbox)
thames_poly = thames
tmap_options(frame = FALSE)
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_borders()
bbox = st_bbox(c(xmin = 534773.3, ymin = 176550, xmax = 543162.4, ymax = 181853.3), crs = 27700)
bbox_poly = st_as_sfc(bbox)
thames_poly = thames
tmap_options(frame = FALSE)
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_borders()
bbox = st_bbox(c(xmin = 534773.3, ymin = 176000, xmax = 543162.4, ymax = 181853.3), crs = 27700)
bbox_poly = st_as_sfc(bbox)
thames_poly = thames
tmap_options(frame = FALSE)
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_borders()
bbox = st_bbox(c(xmin = 534773.3, ymin = 175000, xmax = 543162.4, ymax = 181853.3), crs = 27700)
bbox_poly = st_as_sfc(bbox)
thames_poly = thames
tmap_options(frame = FALSE)
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_borders()
bbox = st_bbox(c(xmin = 534773.3, ymin = 178000, xmax = 543162.4, ymax = 181853.3), crs = 27700)
bbox_poly = st_as_sfc(bbox)
thames_poly = thames
tmap_options(frame = FALSE)
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_borders()
bbox = st_bbox(c(xmin = 534773.3, ymin = 177000, xmax = 543162.4, ymax = 181853.3), crs = 27700)
bbox_poly = st_as_sfc(bbox)
thames_poly = thames
tmap_options(frame = FALSE)
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_borders()
bbox = st_bbox(c(xmin = 534773.3, ymin = 177500, xmax = 543162.4, ymax = 181853.3), crs = 27700)
bbox_poly = st_as_sfc(bbox)
thames_poly = thames
tmap_options(frame = FALSE)
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_borders()
bbox = st_bbox(c(xmin = 534773.3, ymin = 177750, xmax = 543162.4, ymax = 181853.3), crs = 27700)
bbox_poly = st_as_sfc(bbox)
thames_poly = thames
tmap_options(frame = FALSE)
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_borders()
bbox = st_bbox(c(xmin = 534773.3, ymin = 177850, xmax = 543162.4, ymax = 181853.3), crs = 27700)
bbox_poly = st_as_sfc(bbox)
thames_poly = thames
tmap_options(frame = FALSE)
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_borders()
bbox = st_bbox(c(xmin = 534773.3, ymin = 176901.5, xmax = 543162.4, ymax = 181853.3), crs = 27700)
bbox_poly = st_as_sfc(bbox)
thames_poly = thames
tmap_options(frame = FALSE)
(p1 = tm_shape(thames) + tm_polygons())
p1 + tm_shape(bbox_poly) + tm_borders()
